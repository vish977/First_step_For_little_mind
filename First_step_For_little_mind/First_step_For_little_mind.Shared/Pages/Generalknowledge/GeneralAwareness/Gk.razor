@page "/item/{ItemName}"

<div class="container-fluid">
    <h1>@Title</h1>

    <div class="container">
        @if (currentIndex < 10)
        {
            <div class="Imgdiv">
                <img src="@GetImagePath(RandomItems[currentIndex])" alt="@RandomItems[currentIndex]" class="oneImg" />
                <p class="OneText">@RandomItems[currentIndex]</p>
            </div>
        }
        else
        {
            <div class="row">
                @foreach (var item in RandomItems)
                {
                    <div class="col-6 col-md-4 col-lg-2 text-center m-2">
                        <img src="@GetImagePath(item)" alt="@item" class="twoImg" />
                        <p class="twoText">@item</p>
                    </div>
                }
            </div>
        }

        <div class="">
            <button @onclick="ShowPrevious" class="btn btn-secondary me-2" disabled="@(!CanGoPrevious)">Previous</button>
            <button @onclick="ShowNext" class="btn btn-primary" disabled="@(!CanGoNext)">Next</button>
        </div>

    </div>
</div>

@code {
    [Parameter] public string? ItemName { get; set; }

    private string Title = "Learning Item";
    private List<string> SelectedList = new();
    private List<string> RandomItems = new();
    private int currentIndex = 0;

    private readonly List<string> FlowerName = new() { "Rose", "Lotus", "Sunflower", "Marigold", "Daisy", "Tulip", "Poppy", "Daffodil", "Hibiscus", "Jasmine", "Dahlia", "Lily", "Chrysanthemum", "Gulmohar", "Canna-Lily", "Blue-Jay", "Plumeria", "Night-blooming-Jasmine", "Vaijanti" };


    private readonly List<string> AnimalName = new() { "Cat", "Dog", "Elephant", "Pig", "Cow", "Bear", "Deer", "Jackal", "Wolf", "Fox", "Rabbit", "Lion", "Tiger", "Monkey", "Buffalo", "Goat", "Leopard", "Zebra", "Sheep", "Camel", "Hippopotamus", "Rhinoceros", "Donkey", "Giraff", "Horse" };


    private readonly List<string> BirdName = new() { "Penguin", "Owl", "Ostrich", "Hummingbird", "Cock", "Hen", "Emu", "Eagle", "Duck", "Coucal", "Parrot", "Pigeon", "Myna", "Kingfisher", "Robin", "Cuckoo", "Toucan", "Woodpecker", "Sparrow", "Bulbul", "Babbler", "Swan", "Peacock", "Peahen", "Crane" };


    private readonly List<string> FruitNamae = new() { "Apple", "Banana", "Papaya", "Lychee", "Mango", "Orange", "Lemon", "Watermelon", "Muskmelon", "Pomegranate", "Coconut", "Guava", "Grapes", "Kiwi", "Blackberry", "Pear", "Mulberry", "Custard-Apple", "Strawberry", "Starfruit" };


    private readonly List<string> VegetableName = new() { "Mint", "Coriander", "Tomato", "Capsicum", "Turnip", "Onion", "Cabbage", "Pointed-Gourd", "Spinach", "Radish", "Chili", "Corn", "Bottle-Gourd", "Lettuce", "Garlic", "Cucumber", "Bitter-Gourd", "Pumpkin", "Broccoli", "Carrot", "Beetroot", "Ladyfinger", "Beans", "Brinjal", "Avocado", "Potato", "Cauliflower" };

    private readonly List<string> Neighbour = new() { "Barber", "Carpenter", "Cobbler", "Doctor", "Driver", "Electrician", "Mechanic", "Painter", "Plumber", "Tailor", "Teacher", "Watchman" };
    protected override void OnParametersSet()
    {
        SelectedList = ItemName switch
        {
            "FruitsName" => FruitNamae,
            "VegetablesName" => VegetableName,
            "FlowersName" => FlowerName,
            "BirdsName" => BirdName,
            "AnimalsName" => AnimalName,
            "Neighbour" => Neighbour,
            _ => new List<string>()
        };

        Title = ItemName switch
        {
            "FruitsName" => "Fruits Name",
            "VegetablesName" => "Vegetables Name",
            "FlowersName" => "Flowers Name",
            "BirdsName" => "Birds Name",
            "AnimalsName" => "Animals Name",
            "Neighbour" => "Our Neighbours",
            _ => "Learning Item"
        };

        // Pick 10 random items
        var rnd = new Random();
        RandomItems = SelectedList.OrderBy(_ => rnd.Next()).Take(10).ToList();
        currentIndex = 0;
    }

    private void ShowNext()
    {
        if (currentIndex < 10)
        {
            currentIndex++;
        }
    }

    private void ShowPrevious()
    {
        if (currentIndex > 0)
        {
            currentIndex--;
        }
    }

    private bool CanGoPrevious => currentIndex > 0;
    private bool CanGoNext => currentIndex < 10;


    private string GetImagePath(string item)
    {
        string basePath = "/_content/First_step_For_little_mind.Shared/Image/GeneralKnowledge";

        return ItemName switch
        {
            "FruitsName" => $"{basePath}/Fruits/{item}.jpeg",
            "FlowersName" => $"{basePath}/Flowers/{item}.jpeg",
            "VegetablesName" => $"{basePath}/Vegetables/{item}.jpeg",
            "BirdsName" => $"{basePath}/Birds/{item}.jpeg",
            "AnimalsName" => $"{basePath}/Animals/{item}.jpeg",
            "Neighbour" => $"{basePath}/Neighbour/{item}.jpeg",
            _ => ""
        };
    }
}
